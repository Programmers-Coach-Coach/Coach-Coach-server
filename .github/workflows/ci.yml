name: Java CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: coachcoach-bucket
  CODE_DEPLOY_APPLICATION_NAME: coachcoach_cicd

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # (2) application.properties 설정
      - name: Setup application.properties
        run: |
          touch ./src/main/resources/application.properties
          echo "${{ secrets.CI_APPLICATION }}" > ./src/main/resources/application.properties
          cat ./src/main/resources/application.properties

      # (3) Set up Docker Compose
      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose

      # (4) Build and start services
      - name: Build and start services
        run: docker-compose up -d

      # (5) Wait for MySQL to be ready
      - name: Wait for MySQL to be ready
        run: |
          until docker exec coachcoach-db mysql -h127.0.0.1 -P3306 -u coachcoach -p coach1234 -e "SHOW DATABASES;"; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done

      # (6) gradlew 권한 추가
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # (7) JDK 21 세팅
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # (8) Gradle test and build
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Test with Gradle Wrapper
        run: ./gradlew test
        env:
          SPRING_DATASOURCE_URL: ${{secrets.DB_URL}}
          SPRING_DATASOURCE_USERNAME: ${{secrets.DB_USERNAME}}
          SPRING_DATASOURCE_PASSWORD: ${{secrets.DB_PASSWORD}}
          JWT_KEY: ${{ secrets.JWT_KEY }}

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # (9) checkStyle 검사
      - name: Run java checkstyle
        uses: dbelyaev/action-checkstyle@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          checkstyle_config: ./config/checkstyle/naver-checkstyle-rules.xml
          properties_file: ./config/checkstyle/naver-checkstyle-suppressions.xml
